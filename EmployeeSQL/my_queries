-- -- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- -- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
-- BEGIN;

-- DATA MODELING STEP TO CREATE THE TABLES
-- CREATE TABLE IF NOT EXISTS public.titles
-- (
--     title_id character varying(5) NOT NULL,
--     title character varying(25),
--     PRIMARY KEY (title_id) 
-- );

-- CREATE TABLE IF NOT EXISTS public.employees
-- (
--     emp_no bigint NOT NULL,
--     emp_title_id character varying(5),
--     birth_date date,
--     first_name character varying(20),
--     last_name character varying(20),
--     sex character varying(2),
--     hire_date date,
--     PRIMARY KEY (emp_no)
-- );

-- CREATE TABLE IF NOT EXISTS public.departments
-- (
--     dept_no character varying(4) NOT NULL,
--     dept_name character varying(20),
--     PRIMARY KEY (dept_no)
-- );

-- CREATE TABLE IF NOT EXISTS public.salaries
-- (
--     emp_no_2 bigint,
--     salary bigint
-- );

-- CREATE TABLE IF NOT EXISTS public.dept_emp
-- (
--     emp_no_3 bigint,
--     dept_no_2 character varying(5)
-- );

-- CREATE TABLE IF NOT EXISTS public.dept_manager
-- (
--     dept_no_4 character varying(4),
--     emp_no_4 bigint
-- );

-- ALTER TABLE IF EXISTS public.employees
--     ADD FOREIGN KEY (emp_title_id)
--     REFERENCES public.titles (title_id) MATCH SIMPLE
--     ON UPDATE NO ACTION
--     ON DELETE NO ACTION
--     NOT VALID;


-- ALTER TABLE IF EXISTS public.salaries
--     ADD FOREIGN KEY (emp_no_2)
--     REFERENCES public.employees (emp_no) MATCH SIMPLE
--     ON UPDATE NO ACTION
--     ON DELETE NO ACTION
--     NOT VALID;


-- ALTER TABLE IF EXISTS public.dept_emp
--     ADD FOREIGN KEY (emp_no_3)
--     REFERENCES public.employees (emp_no) MATCH SIMPLE
--     ON UPDATE NO ACTION
--     ON DELETE NO ACTION
--     NOT VALID;


-- ALTER TABLE IF EXISTS public.dept_emp
--     ADD FOREIGN KEY (dept_no_2)
--     REFERENCES public.departments (dept_no) MATCH SIMPLE
--     ON UPDATE NO ACTION
--     ON DELETE NO ACTION
--     NOT VALID;


-- ALTER TABLE IF EXISTS public.dept_manager
--     ADD FOREIGN KEY (dept_no_4)
--     REFERENCES public.departments (dept_no) MATCH SIMPLE
--     ON UPDATE NO ACTION
--     ON DELETE NO ACTION
--     NOT VALID;


-- ALTER TABLE IF EXISTS public.dept_manager
--     ADD FOREIGN KEY (emp_no_4)
--     REFERENCES public.employees (emp_no) MATCH SIMPLE
--     ON UPDATE NO ACTION
--     ON DELETE NO ACTION
--     NOT VALID;

-- END;




-- DATA ANALYSIS
-- 1: List the following details of each employee: employee number, last name, first name, sex, and salary.

-- select a.emp_no, a.last_name, a.first_name, a.sex, b.salary
-- from employees as a
-- join salaries as b on
-- b.emp_no_2 = a.emp_no;


-- 2: List first name, last name, and hire date for employees who were hired in 1986.

-- select first_name, last_name, hire_date from employees 
-- WHERE hire_date 
-- BETWEEN '$1986-01-01' AND '$1986-12-31';


-- 3: List the manager of each department with the following information: department number, department name, the manager's employee number, last name, first name.

-- select a.dept_no_4, b.dept_name, a.emp_no_4, c.last_name, c.first_name
-- from dept_manager as a
-- join departments as b on
-- b.dept_no=a.dept_no_4
-- join employees as c on
-- c.emp_no=a.emp_no_4;


-- 4: List the department of each employee with the following information: employee number, last name, first name, and department name.

-- select a.emp_no, a.last_name, a.first_name, departments.dept_name
-- from employees as a
-- join dept_emp on
-- dept_emp.emp_no_3=a.emp_no
-- join departments on
-- dept_emp.dept_no_2=departments.dept_no;


-- 5: List first name, last name, and sex for employees whose first name is "Hercules" and last names begin with "B."

-- select first_name, last_name, sex from employees
-- where first_name = 'Hercules' and last_name LIKE 'B%'


-- 6: List all employees in the Sales department, including their employee number, last name, first name, and department name.

-- select b.emp_no_3 as employee_num, c.last_name, c.first_name, a.dept_name 
-- from dept_emp as b 
-- join departments as a on
-- a.dept_no=b.dept_no_2
-- join employees as c on
-- b.emp_no_3=c.emp_no
-- where dept_name = 'Sales';


-- 7: List all employees in the Sales and Development departments, including their employee number, last name, first name, and department name.

-- select b.emp_no_3 as employee_num, c.last_name, c.first_name, a.dept_name 
-- from dept_emp as b 
-- join departments as a on
-- a.dept_no=b.dept_no_2
-- join employees as c on
-- b.emp_no_3=c.emp_no
-- where dept_name = 'Sales' or dept_name = 'Development';

-- 8: List the frequency count of employee last names (i.e., how many employees share each last name) in descending order.

SELECT last_name, COUNT(last_name) AS Frequency
FROM employees
GROUP BY last_name
ORDER BY
COUNT(last_name) DESC